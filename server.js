// === 1. –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø ===
const express = require('express');
require('dotenv').config();
const { GoogleGenerativeAI } = require('@google/generative-ai');

// –ù–û–í–ï: –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ Firebase Admin SDK –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö
const admin = require('firebase-admin');

// === 2. –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø ===
const app = express();
const port = 3000;
app.use(express.json());
app.use(express.static('.'));

// --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Firebase ---
// –ù–û–í–ï: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞—à –∫–ª—é—á –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
const serviceAccount = require('./serviceAccountKey.json');

// –ù–û–í–ï: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –¥–æ–¥–∞—Ç–æ–∫ Firebase, –Ω–∞–¥–∞–≤—à–∏ –π–æ–º—É "–∫–ª—é—á"
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

// –ù–û–í–ï: –û—Ç—Ä–∏–º—É—î–º–æ –¥–æ—Å—Ç—É–ø –¥–æ –Ω–∞—à–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (Firestore)
const db = admin.firestore();
// –ù–û–í–ï: –í–∏–∑–Ω–∞—á–∞—î–º–æ "ID" –Ω–∞—à–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É. –¶–µ –±—É–¥–µ "–¥–æ–∫—É–º–µ–Ω—Ç" —É –±–∞–∑—ñ.
// –í–∏ –º–æ–∂–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ü–µ —ñ–º'—è, —è–∫—â–æ —Ö–æ—á–µ—Ç–µ –º–∞—Ç–∏ *—Ä—ñ–∑–Ω—ñ* –ø—Ä–æ—î–∫—Ç–∏
const PROJECT_ID = 'my-first-book';

// --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Gemini ---
const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∞—à—É —Ä–æ–±–æ—á—É –º–æ–¥–µ–ª—å, —è–∫—É –≤–∏ –∑–Ω–∞–π—à–ª–∏
const model = genAI.getGenerativeModel({ model: "gemini-2.5-flash" }); 

// –ù–û–í–ï: –ü–µ—Ä–µ–Ω–æ—Å–∏–º–æ "–æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å" —É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤—É —ñ—Å—Ç–æ—Ä—ñ—é
const botPersona = `
–¢–∏ ‚Äî "–û–ø—É—Å", –µ–∫—Å–ø–µ—Ä—Ç–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ –∑—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–∏–≥ —Ç–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∏–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫. –¢–≤–æ—è –º–µ—Ç–∞ ‚Äî –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø–∏—Å–∞—Ç–∏ –∫–Ω–∏–≥—É –∫—Ä–æ–∫ –∑–∞ –∫—Ä–æ–∫–æ–º, –≤—ñ–¥ —ñ–¥–µ—ó –¥–æ —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É.

–¢–≤–æ—ó –≥–æ–ª–æ–≤–Ω—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏:
1.  **–¢–∏ ‚Äî –°–ø—ñ–≤–∞–≤—Ç–æ—Ä:** –°—Ç–∞–≤ –Ω–∞–≤—ñ–¥–Ω—ñ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è, —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø–∏—Å–∞—Ç–∏. –ù–µ –ø–∏—à–∏ –≤–µ–ª–∏–∫—ñ —à–º–∞—Ç–∫–∏ —Ç–µ–∫—Å—Ç—É –∑–∞ –Ω—å–æ–≥–æ.
2.  **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ ‚Äî —Ü–µ –≤—Å–µ:** –ó–∞–≤–∂–¥–∏ –¥—É–º–∞–π –ø—Ä–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–∂–∞–Ω—Ä, 3-–∞–∫—Ç–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —Ä–æ–∑–≤–∏—Ç–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞).
3.  **–¢–æ–Ω:** –ë—É–¥—å –ø—ñ–¥—Ç—Ä–∏–º—É—é—á–∏–º, –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–º —Ç–∞ –Ω–∞–¥–∏—Ö–∞—é—á–∏–º. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ (‚úçÔ∏è, üìö, ü§î, ‚ú®) –¥–æ—Ä–µ—á–Ω–æ.
4.  **–°—Ç–∏—Å–ª—ñ—Å—Ç—å:** –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ —ñ –ø–æ —Å—É—Ç—ñ (2-3 —Ä–µ—á–µ–Ω–Ω—è), —â–æ–± –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —Ç–µ–º–ø —Ä–æ–∑–º–æ–≤–∏.
`;

// –ù–û–í–ï: –°—Ç–≤–æ—Ä—é—î–º–æ "–ø–æ—á–∞—Ç–∫–æ–≤—É —ñ—Å—Ç–æ—Ä—ñ—é", —è–∫—â–æ –≤ –±–∞–∑—ñ –Ω—ñ—á–æ–≥–æ –Ω–µ–º–∞—î
const createInitialHistory = () => {
  return [
    { role: "user", parts: [{ text: botPersona }] },
    { role: "model", parts: [{ text: "–Ø –û–ø—É—Å, –≤–∞—à –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∏–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫. –ó —è–∫–æ—ó –≤–µ–ª–∏–∫–æ—ó —ñ–¥–µ—ó –º–∏ –ø–æ—á–Ω–µ–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ? ‚úçÔ∏è" }] }
  ];
};

// === 3. –û–ë–†–û–ë–ö–ê –ó–ê–ü–ò–¢–Ü–í (–ü–æ–≤–Ω—ñ—Å—Ç—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–∞) ===

app.post('/chat', async (req, res) => {
  try {
    const userMessage = req.body.message;
    console.log('–°–µ—Ä–≤–µ—Ä –æ—Ç—Ä–∏–º–∞–≤ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', userMessage);

    // --- –ö–†–û–ö 1: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é –∑ Firestore ---
    // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–∞—à "–¥–æ–∫—É–º–µ–Ω—Ç" —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    const projectDocRef = db.collection('projects').doc(PROJECT_ID);
    const doc = await projectDocRef.get();

    let history;
    if (!doc.exists) {
      // –Ø–∫—â–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —ñ—Å—Ç–æ—Ä—ñ—é
      console.log('–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å—Ç–≤–æ—Ä—é—é –Ω–æ–≤—É —ñ—Å—Ç–æ—Ä—ñ—é...');
      history = createInitialHistory();
    } else {
      // –Ø–∫—â–æ –¥–æ–∫—É–º–µ–Ω—Ç —î, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ –Ω—å–æ–≥–æ —ñ—Å—Ç–æ—Ä—ñ—é
      console.log('–Ü—Å—Ç–æ—Ä—ñ—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ Firestore.');
      history = doc.data().history;
    }

    // --- –ö–†–û–ö 2: –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó ---
    history.push({ role: "user", parts: [{ text: userMessage }] });

    // --- –ö–†–û–ö 3: –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤—Å—é —ñ—Å—Ç–æ—Ä—ñ—é –≤ Gemini ---
    // –ú–∏ –±—ñ–ª—å—à–µ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ `chatSession`, –∞ `generateContent`
    const result = await model.generateContent({ contents: history });
    const botResponse = result.response.text();
    
    console.log('Gemini –≤—ñ–¥–ø–æ–≤—ñ–≤:', botResponse);

    // --- –ö–†–û–ö 4: –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—É —ñ—Å—Ç–æ—Ä—ñ—é –≤ Firestore ---
    // –î–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–æ—Ç–∞ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó, *–ø–µ—Ä–µ–¥* –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º
    history.push({ role: "model", parts: [{ text: botResponse }] });

    // –ü–æ–≤–Ω—ñ—Å—Ç—é –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ –¥–æ–∫—É–º–µ–Ω—Ç –Ω–æ–≤–æ—é, –ø–æ–≤–Ω–æ—é —ñ—Å—Ç–æ—Ä—ñ—î—é
    await projectDocRef.set({ history: history });
    console.log('–Ü—Å—Ç–æ—Ä—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ Firestore.');

    // --- –ö–†–û–ö 5: –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ ---
    res.json({ message: botResponse });

  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –≤ /chat:", error);
    res.status(500).json({ message: "–û–π, —â–æ—Å—å –∑–ª–∞–º–∞–ª–æ—Å—å —É –º–æ—î–º—É –º–æ–∑–∫—É... –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ç–µ—Ä–º—ñ–Ω–∞–ª —Å–µ—Ä–≤–µ—Ä–∞." });
  }
});

// –ù–û–í–ï: –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø—Ä–æ—î–∫—Ç—ñ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
app.get('/get-projects', async (req, res) => {
    // –ú–∏ –æ—á—ñ–∫—É—î–º–æ –Ω–∞ –∑–∞–ø–∏—Ç —Ç–∏–ø—É: /get-projects?user=Mikhailo_V
    const user = req.query.user; 
    
    if (!user) {
        return res.status(400).json({ message: "–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (user)" });
    }

    try {
        const projectsRef = db.collection('projects');
        // –ì–æ–ª–æ–≤–Ω–∏–π –∑–∞–ø–∏—Ç: —à—É–∫–∞—î–º–æ –≤—Å—ñ –ø—Ä–æ—î–∫—Ç–∏, –¥–µ –ø–æ–ª–µ 'owner' == 'Mikhailo_V'
        const snapshot = await projectsRef.where('owner', '==', user).get();

        if (snapshot.empty) {
            console.log(`–ü—Ä–æ—î–∫—Ç—ñ–≤ –¥–ª—è ${user} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.`);
            return res.json([]); // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤, —Ü–µ –Ω–µ –ø–æ–º–∏–ª–∫–∞
        }

        const projects = [];
        snapshot.forEach(doc => {
            // –ó–±–∏—Ä–∞—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—î–∫—Ç—ñ–≤, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ ID —Ç–∞ title
            projects.push({
                id: doc.id,
                title: doc.data().title || '–ü—Ä–æ—î–∫—Ç –±–µ–∑ –Ω–∞–∑–≤–∏' // '||' - –Ω–∞ –≤–∏–ø–∞–¥–æ–∫, —è–∫—â–æ –Ω–∞–∑–≤–∏ –Ω–µ–º–∞—î
            });
        });
        
        console.log(`–ù–∞–¥—Å–∏–ª–∞—é ${projects.length} –ø—Ä–æ—î–∫—Ç(—ñ–≤) –¥–ª—è ${user}`);
        res.json(projects);
    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ—î–∫—Ç—ñ–≤:", error);
        res.status(500).json({ message: "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–æ—î–∫—Ç–∏." });
    }
});

// –ù–û–í–ï: –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –°–¢–í–û–†–ï–ù–ù–Ø –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É
app.post('/create-project', async (req, res) => {
    // –ú–∏ –æ—á—ñ–∫—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ { user: "Mykhailo", title: "–ù–æ–≤–∞ –∫–Ω–∏–≥–∞" }
    const { user, title } = req.body;

    if (!user || !title) {
        return res.status(400).json({ message: "–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ 'user' —Ç–∞ 'title'" });
    }

    try {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É, —Å–≤—ñ–∂—É —ñ—Å—Ç–æ—Ä—ñ—é –¥–ª—è —Ü—å–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É
        const initialHistory = [
            { role: "user", parts: [{ text: botPersona }] },
            { role: "model", parts: [{ text: `–Ø –û–ø—É—Å. –†–∞–¥–∏–π –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –Ω–∞–¥ –≤–∞—à–æ—é –Ω–æ–≤–æ—é –∫–Ω–∏–≥–æ—é "${title}"! –ó —è–∫–æ—ó —ñ–¥–µ—ó –ø–æ—á–Ω–µ–º–æ? ‚úçÔ∏è` }] }
        ];

        // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ –∫–æ–ª–µ–∫—Ü—ñ—é 'projects'
        const newProjectRef = await db.collection('projects').add({
            owner: user,
            title: title,
            history: initialHistory,
            createdAt: new Date() // –î–æ–¥–∞–º–æ –¥–∞—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è, —Ü–µ –∫–æ—Ä–∏—Å–Ω–æ
        });

        console.log(`–°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –ø—Ä–æ—î–∫—Ç: ${newProjectRef.id} –¥–ª—è ${user}`);
        
        // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ ID —Ç–∞ title –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
        res.status(201).json({ id: newProjectRef.id, title: title });

    } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—î–∫—Ç—É:", error);
        res.status(500).json({ message: "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—î–∫—Ç." });
    }
});

// –ü–†–ò–ú–Ü–¢–ö–ê: –ù–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ, —â–æ–± botPersona –±—É–ª–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
// –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –∑–º—ñ–Ω–Ω–∞ `botPersona` –≤–∏–∑–Ω–∞—á–µ–Ω–∞ –Ω–∞ —Å–∞–º–æ–º—É –ø–æ—á–∞—Ç–∫—É –≤–∞—à–æ–≥–æ server.js,
// —â–æ–± —Ü–µ–π –Ω–æ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç –º—ñ–≥ —ó—ó "–±–∞—á–∏—Ç–∏". (–£ –Ω–∞—à–æ–º—É –∫–æ–¥—ñ –≤–æ–Ω–∞ –≤–∂–µ —Ç–∞–º, —Ç–∞–∫ —â–æ –≤—Å–µ –≥–∞—Ä–∞–∑–¥).

// === 4. –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ===
app.listen(port, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ! http://localhost:${port}`);
});